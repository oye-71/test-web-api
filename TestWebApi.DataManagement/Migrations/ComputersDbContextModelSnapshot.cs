// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TestWebApi.DataManagement.DbManagement;

#nullable disable

namespace TestWebApi.DataManagement.Migrations
{
    [DbContext(typeof(ComputersDbContext))]
    partial class ComputersDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("TestWebApi.DataManagement.Models.Magasin", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Magasin", (string)null);
                });

            modelBuilder.Entity("TestWebApi.DataManagement.Models.Ordinateur", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Brand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("Ordinateur", (string)null);
                });

            modelBuilder.Entity("TestWebApi.DataManagement.Models.Stock", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDispo")
                        .HasColumnType("bit");

                    b.Property<Guid>("MagasinId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OrdinateurId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("MagasinId");

                    b.HasIndex("OrdinateurId");

                    b.ToTable("Stock", (string)null);
                });

            modelBuilder.Entity("TestWebApi.DataManagement.Models.Stock", b =>
                {
                    b.HasOne("TestWebApi.DataManagement.Models.Magasin", "Magasin")
                        .WithMany("Stocks")
                        .HasForeignKey("MagasinId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TestWebApi.DataManagement.Models.Ordinateur", "Ordinateur")
                        .WithMany("Stocks")
                        .HasForeignKey("OrdinateurId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Magasin");

                    b.Navigation("Ordinateur");
                });

            modelBuilder.Entity("TestWebApi.DataManagement.Models.Magasin", b =>
                {
                    b.Navigation("Stocks");
                });

            modelBuilder.Entity("TestWebApi.DataManagement.Models.Ordinateur", b =>
                {
                    b.Navigation("Stocks");
                });
#pragma warning restore 612, 618
        }
    }
}
